---

- name: "{{ beats_flavor }}: output keystore for Linux"
  block:
    - name: "{{ beats_flavor }}: Remove existing keystore records on Linux"
      command: "{{ beats_linux_exec }} keystore remove {{ item }}"
      register: result
      failed_when:
        - result is failed
        - result.stderr is not search('could not find key')
      when: beats_keystore_update | bool
      loop:
        - OUTPUT_CERT_KEY_PASSPHRASE
        - OUTPUT_USER
        - OUTPUT_PASS
        - KIBANA_USER
        - KIBANA_PASS
        - KIBANA_CERT_KEY_PASSPHRASE

    - name: "{{ beats_flavor }}: List keystore settings on Linux"
      command: "{{ beats_linux_exec }} keystore list"
      register: _beats_keystore_settings
      changed_when: false

    - name: "{{ beats_flavor }}: Add passwords and passphrases to keystore on Linux"
      shell: |
        set -o pipefail;
        echo '{{ lookup("vars", item.1) }}' |
          {{ beats_linux_exec }} keystore add \
          {{ item.0 }} --stdin
      args:
        executable: /bin/bash
      when:
        - _beats_keystore_settings.stdout is not search(item.0)
        - lookup('vars', item.1) != None
      loop: "{{ keystore_keys | zip(beats_vars) | list }}"
      vars:
        keystore_keys:
          - OUTPUT_CERT_KEY_PASSPHRASE
          - OUTPUT_USER
          - OUTPUT_PASS
          - KIBANA_USER
          - KIBANA_PASS
          - KIBANA_CERT_KEY_PASSPHRASE
        beats_vars:
          - beats_certificates_password
          - beats_output_user
          - beats_output_pass
          - beats_kibana_username
          - beats_kibana_password
          - beats_kibana_ssl_key_passphrase
      notify: beats restart service
      no_log: >-
        {{
          lookup('env', 'IN_MOLECULE')
          | default(false, true)
          | ternary(false, true)
        }}
  when: ansible_os_family != 'Windows'

- name: "{{ beats_flavor }}: output keystore for Windows"
  block:
    - name: "{{ beats_flavor }}: Remove existing  keystore records on Windows"
      win_command: >-
        {{ beats_win_exec }} keystore remove {{ item }}
      register: result
      failed_when:
        - result is failed
        - result.stderr is not search('could not find key')
      when: beats_keystore_update | bool
      loop:
        - OUTPUT_CERT_KEY_PASSPHRASE
        - OUTPUT_USER
        - OUTPUT_PASS
        - KIBANA_USER
        - KIBANA_PASS
        - KIBANA_CERT_KEY_PASSPHRASE

    - name: "{{ beats_flavor }}: List  keystore settings on Windows"
      win_command: "{{ beats_win_exec }} keystore list"
      register: _beats_keystore_settings
      changed_when: false

    - name: "{{ beats_flavor }}: Add passwords and passphrases to keystore on Windows"
      win_shell: >-
        echo '{{ lookup('vars', item.1) }}' | {{
          beats_win_exec }} keystore add {{ item.0 }} --stdin
      args:
        executable: powershell
      when:
        - _beats_keystore_settings.stdout is not search(item.0)
        - lookup('vars', item.1) != None
      loop: "{{ keystore_keys | zip(beats_vars) | list }}"
      vars:
        keystore_keys:
          - OUTPUT_CERT_KEY_PASSPHRASE
          - OUTPUT_USER
          - OUTPUT_PASS
          - KIBANA_USER
          - KIBANA_PASS
          - KIBANA_CERT_KEY_PASSPHRASE
        beats_vars:
          - beats_certificates_password
          - beats_output_user
          - beats_output_pass
          - beats_kibana_username
          - beats_kibana_password
          - beats_kibana_ssl_key_passphrase
      notify: beats restart service
      no_log: >-
        {{
          lookup('env', 'IN_MOLECULE')
          | default(false, true)
          | ternary(false, true)
        }}
  when: ansible_os_family == 'Windows'
